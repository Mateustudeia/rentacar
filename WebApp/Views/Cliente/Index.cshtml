@model IEnumerable<Repository.Entities.Cliente>

@{
    ViewBag.Title = "Clientes";
}

<div class="jumbotron">
            <h2><strong>Clientes</strong></h2>
            <button type="button" class="btn btn-success btn-sm" data-toggle="modal" data-target="#modalCadastro">Cadastrar</button>
</div>



<div class="row">
    @{
        var grid = new WebGrid(Model, canPage: false);
    }
    @grid.GetHtml(tableStyle: "table table-bordered table-responsive table-hover",
        columns: grid.Columns(
            grid.Column("nome", "Nome"),
            grid.Column("telefone", "Telefone"),
            grid.Column("email", "Email")
            )
        )
</div>

<!-- Modal -->
<div class="modal fade" id="modalCadastro" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Cadastro de Cliente</h4>
            </div>
            <div class="modal-body">

            @*
            NÃO CONSEGUINDO UTILIZAR A MODEL -> Dividir a view


            @model Repository.Entities.Cliente

            @{
                ViewBag.Title = "Cadastrar cliente";
            }

            <h2>Registro</h2>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()


                <div class="form-horizontal">
                    <h4>Usuario</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Registrar Usuário" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Retornar", "Index")
            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }

                
    </div>
        *@








            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal">Salvar</button>
            </div>
        </div>

    </div>
</div>